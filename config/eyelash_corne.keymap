#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

// &msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    time-to-max-speed-ms = <50>;       // 300
    acceleration-exponent = <1>;
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

/ {
    behaviors {
        td0: td0 {
            compatible = "zmk,behavior-tap-dance";
            display-name = "Shift/Caps Lock Tap Dance";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT>, <&kp CAPS>;
        };

        td1: td1 {
            compatible = "zmk,behavior-tap-dance";
            label = "DOUBLE_TAP";
            #binding-cells = <0>;
            bindings = <&kp LCTRL>, <&kp LEFT_ALT>;
        };

        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

    combos {
        compatible = "zmk,combos";

        combo_tilde {
            bindings = <&kp GRAVE>;
            key-positions = <1 2>;
        };

        combo_tab {
            bindings = <&kp TAB>;
            key-positions = <16 15>;
        };

        combo_enter {
            bindings = <&kp ENTER>;
            key-positions = <24 25>;
        };

        settings_layer {
            bindings = <&mo 3>;
            key-positions = <13 14 15 16 17>;
        };
    };

    rgb_encoder: rgb_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&rgb_ug RGB_BRI>, <&rgb_ug RGB_BRD>;
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <50>;
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "QWERTY";
            bindings = <
&kp ESC    &hm ESC Q         &kp W  &kp E  &kp R  &kp T                             &kp UP                    &kp Y      &kp U          &kp I          &kp O    &kp P                  &kp BSPC
&kp TAB    &kp A             &kp S  &kp D  &kp F  &kp G                   &kp LEFT  &kp RIGHT_ALT  &kp RIGHT  &kp H      &kp J          &kp K          &kp L    &kp SQT                &kp ENTER
&kp LCTRL  &hm LEFT_SHIFT Z  &kp X  &kp C  &kp V  &kp B     &kp C_MUTE              &kp DOWN                  &kp N      &kp M          &kp COMMA      &kp DOT  &mt RIGHT_SHIFT SLASH  &kp RIGHT_SHIFT
                                    &td1   &mo 1  &kp LGUI                                                    &kp SPACE  &kp BACKSPACE  &kp RIGHT_ALT
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        lower_layer {
            display-name = "NUMBER";
            bindings = <
&trans  &kp N1     &kp N2           &kp N3          &kp N4  &kp N5                                         &mmv MOVE_UP                     &kp N6           &kp N7            &kp N8             &kp N9     &kp N0          &trans
&trans  &kp GRAVE  &kp MINUS        &kp EQUAL       &none   &none                          &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &kp LEFT         &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp SEMI   &kp SQT         &trans
&trans  &trans     &rgb_ug RGB_OFF  &rgb_ug RGB_ON  &trans  &rgb_ug RGB_EFF  &kp C_MUTE                    &mmv MOVE_DOWN                   &rgb_ug RGB_EFR  &kp COMMA         &kp PERIOD         &kp SLASH  &kp LEFT_SHIFT  &trans
                                    &trans          &trans  &trans                                                                          &trans           &kp BACKSPACE     &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        raise_layer {
            display-name = "SYMBOL";
            bindings = <
&trans  &kp EXCL      &kp AT        &kp HASH   &kp DLLR   &kp PRCNT                            &mmv MOVE_UP                     &kp CARET  &kp AMPS   &kp ASTRK  &kp LPAR  &kp RPAR  &kp BSPC
&trans  &bt BT_CLR    &mkp LCLK     &mkp MCLK  &mkp RCLK  &mkp MB4             &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &kp MINUS  &kp EQUAL  &kp LBKT   &kp RBKT  &kp BSLH  &kp GRAVE
&trans  &out OUT_USB  &out OUT_BLE  &none      &none      &mkp MB5   &trans                    &mmv MOVE_DOWN                   &kp UNDER  &kp PLUS   &kp LBRC   &kp RBRC  &kp PIPE  &kp TILDE
                                    &trans     &trans     &kp SPACE                                                             &kp RET    &trans     &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        layer_3 {
            display-name = "Fn";
            bindings = <
&studio_unlock  &kp F1      &kp F2     &kp F3       &kp F4     &kp F5                                  &mmv MOVE_UP                     &kp F6       &kp F7     &kp F8       &kp F9      &kp F10          &kp F11
&trans          &trans      &mkp LCLK  &mkp MCLK    &mkp RCLK  &mkp MB4                &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &bootloader  &mkp LCLK  &mkp MCLK    &mkp RCLK   &kp PRINTSCREEN  &kp F12
&trans          &sys_reset  &trans     &bootloader  &trans     &mkp MB5  &kp C_MUTE                    &mmv MOVE_DOWN                   &trans       &trans     &bootloader  &sys_reset  &kp SCROLLLOCK   &kp PAUSE_BREAK
                                       &trans       &trans     &trans                                                                   &trans       &trans     &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };
    };
};
